{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red0\green0\blue192;\red100\green100\blue100;
\red106\green62\blue62;\red42\green0\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c0\c0\c75294;\csgenericrgb\c39216\c39216\c39216;
\csgenericrgb\c41569\c24314\c24314;\csgenericrgb\c16471\c0\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0
\cf2 import\cf0  java.io.IOException;\
\cf2 import\cf0  java.util.ArrayList;\
\cf2 import\cf0  java.util.Calendar;\
\cf2 import\cf0  java.util.Locale;\
\
\cf2 public\cf0  \cf2 class\cf0  History\{\
    \cf2 private\cf0  String \cf3 customerOrDriver\cf0 , \cf3 userId\cf0 ;\
\
    \cf2 private\cf0  \ul View\ulnone  \cf3 HistoryView\cf0 ;\
    \cf2 private\cf0  \ul View\ulnone .Adapter \cf3 HistoryAdapter\cf0 ;\
    \cf2 private\cf0  \ul View\ulnone .LayoutManager \cf3 HistoryLayoutManager\cf0 ;\
\
    \cf2 private\cf0  \ul TextView\ulnone  \cf3 \ul \ulc3 Balance\cf0 \ulnone ;\
\
    \cf2 private\cf0  Double \ul Balance\ulnone  = 0.0;\
\
    \cf2 private\cf0  \ul Button\ulnone  \cf3 Payout\cf0 ;\
\
    \cf2 private\cf0  \ul EditText\ulnone  \cf3 PayoutEmail\cf0 ;\
\
    \cf4 @Override\cf0 \
    \cf2 protected\cf0  \cf2 void\cf0  onCreate(\ul Bundle\ulnone  \cf5 Ins\cf0 \
   \
\
        Balance \ul = findViewById(id.balance)\ulnone ;\
        Payout = findViewById(id.payout);\
        PayoutEmail = findViewById(id.payoutEmail);\
\
        \cf3 HistoryView\cf0  = findViewById(id.historyView);\
        \cf3 HistoryView\cf0 .setNestedScrollingEnabled(\cf2 false\cf0 );\
        \cf3 HistoryView\cf0 .setHasFixedSize(\cf2 true\cf0 );\
        HistoryLay = \cf2 new\cf0  LinearLayoutManager(HistoryAct.\cf2 this\cf0 );\
        HistoryView.setLayoutManager(HistoryLay);\
        HistoryAdapter = \cf2 new\cf0  HistoryAdapter(getDataSetHistory(), HistoryAct.\cf2 this\cf0 );\
        HistoryView.setAdapter(HistoryAdapter);\
\
\
        \ul \}\ulnone \
\
        mPayout.setOnClickListener(\cf2 new\cf0  \ul View\ulnone .OnClickListener() \{\
            \cf4 @Override\cf0 \
            \cf2 public\cf0  \cf2 void\cf0  onClick(\ul View\ulnone  \cf5 view\cf0 ) \{\
                payoutRequest();\
            \}\
        \});\
    \}\
\
\
\
   \
\
    \cf2 private\cf0  String getDate(Long \cf5 time\cf0 ) \{\
        Calendar \cf5 cal\cf0  = Calendar.getInstance(Locale.getDefault());\
        \cf5 cal\cf0 .setTimeInMillis(\cf5 time\cf0 *1000);\
        String \cf5 date\cf0  = \ul DateFormat\ulnone .format(\cf6 "MM-dd-yyyy hh:mm"\cf0 , \cf5 cal\cf0 ).toString();\
        \cf2 return\cf0  \cf5 date\cf0 ;\
    \}\
\
    \cf2 private\cf0  \ul ArrayList\ulnone  \cf3 resultsHistory\cf0  = \cf2 new\cf0  ArrayList<\ul HistoryObject\ulnone >();\
    \cf2 private\cf0  ArrayList<\ul HistoryObject\ulnone > getDataSetHistory() \{\
        \cf2 return\cf0  \cf3 \ul \ulc3 resultsHistory\cf0 \ulnone ;\
    \ul \}\ulnone \
\
}